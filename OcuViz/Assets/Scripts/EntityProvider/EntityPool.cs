namespace EntityProvider
{
    /// <summary>
    /// An interface defining persistence functionality that must be provided by all implementations of an EntityPool.
    /// <para> An EntityPool is a persistence module which is used to store entities after they have been generated by
    /// entity factories, but before they have been linked or placed in the scene.
    /// <seealso cref="ConcreteEntityPool"/>
    /// </summary>
    interface EntityPool
    {
        /// <summary>
        /// The definition of a method used to add entities to the EntityPool. Concrete classes implementing this method
        /// must disallow duplicate entity additions. If an entity is added that is already present in the EntityPool, a
        /// DuplicateEntityException must be raised. 
        /// <seealso cref="DuplicateEntityException"/>
        /// </summary>
        void store(Entity entity);

        /// <summary>
        /// The definition of a method used to fetch references to entities from the EntityPool. Concrete classes implementing this method
        /// must disallow fetching entities which are not present in the EntityPool. If the name of an absent entity is provided, an
        /// EntityNotFoundException must be raised. 
        /// <seealso cref="EntityNotFoundException"/>
        /// </summary>
        Entity fetch(string entityName);
    }
}